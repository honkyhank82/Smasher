name: Build Android APK/AAB (EAS Fallback)

on:
  workflow_dispatch:
    inputs:
      build_type:
        description: 'Build type (apk or aab)'
        required: true
        default: 'apk'
        type: choice
        options:
          - apk
          - aab
      environment:
        description: 'Environment (development, preview, production)'
        required: true
        default: 'production'
        type: choice
        options:
          - development
          - preview
          - production
  push:
    branches:
      - main
    paths:
      - 'app-rn/**'
      - '.github/workflows/build-android.yml'

jobs:
  build:
    name: Build Android ${{ github.event.inputs.build_type || 'apk' }}
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: app-rn/package-lock.json

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3

      - name: Install dependencies
        working-directory: app-rn
        run: npm ci

      - name: Setup Expo
        working-directory: app-rn
        run: |
          npm install -g eas-cli
          npx expo install

      - name: Create google-services.json
        working-directory: app-rn/android/app
        run: |
          echo '${{ secrets.GOOGLE_SERVICES_JSON }}' > google-services.json

      - name: Decode keystore
        working-directory: app-rn/android/app
        run: |
          echo '${{ secrets.ANDROID_KEYSTORE_BASE64 }}' | base64 -d > release.keystore

      - name: Create gradle.properties
        working-directory: app-rn/android
        run: |
          cat << EOF > gradle.properties
          MYAPP_UPLOAD_STORE_FILE=release.keystore
          MYAPP_UPLOAD_KEY_ALIAS=${{ secrets.ANDROID_KEY_ALIAS }}
          MYAPP_UPLOAD_STORE_PASSWORD=${{ secrets.ANDROID_STORE_PASSWORD }}
          MYAPP_UPLOAD_KEY_PASSWORD=${{ secrets.ANDROID_KEY_PASSWORD }}
          org.gradle.jvmargs=-Xmx4096m -XX:MaxMetaspaceSize=512m
          org.gradle.daemon=false
          EOF

      - name: Build APK
        if: github.event.inputs.build_type == 'apk' || github.event.inputs.build_type == ''
        working-directory: app-rn/android
        run: ./gradlew assembleRelease --no-daemon

      - name: Build AAB
        if: github.event.inputs.build_type == 'aab'
        working-directory: app-rn/android
        run: ./gradlew bundleRelease --no-daemon

      - name: Upload APK artifact
        if: github.event.inputs.build_type == 'apk' || github.event.inputs.build_type == ''
        uses: actions/upload-artifact@v4
        with:
          name: smasher-app-${{ github.event.inputs.environment || 'production' }}.apk
          path: app-rn/android/app/build/outputs/apk/release/app-release.apk
          retention-days: 30

      - name: Upload AAB artifact
        if: github.event.inputs.build_type == 'aab'
        uses: actions/upload-artifact@v4
        with:
          name: smasher-app-${{ github.event.inputs.environment || 'production' }}.aab
          path: app-rn/android/app/build/outputs/bundle/release/app-release.aab
          retention-days: 30

      - name: Create Release
        if: github.ref == 'refs/heads/main' && (github.event.inputs.build_type == 'apk' || github.event.inputs.build_type == '')
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ github.run_number }}
          name: Release v${{ github.run_number }}
          draft: false
          prerelease: false
          files: |
            app-rn/android/app/build/outputs/apk/release/app-release.apk
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
